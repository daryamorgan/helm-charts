{{ if .Values.tokengen.enable }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "enterprise-logs.tokengenFullname" . }}
  labels:
    {{- include "enterprise-logs.tokengenLabels" . | nindent 4 }}
    {{- with .Values.tokengen.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with .Values.tokengen.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    "helm.sh/hook": post-install
spec:
  backoffLimit: 6
  completions: 1
  parallelism: 1
  selector:
  template:
    metadata:
      labels:
        {{- include "enterprise-logs.tokengenSelectorLabels" . | nindent 8 }}
        {{- with .Values.tokengen.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.useExternalConfig }}
        checksum/config: {{ .Values.externalConfigVersion }}
        {{- else }}
        checksum/config: {{ include (print $.Template.BasePath "/secret-config.yaml") . | sha256sum }}
        {{- end}}
        {{- with .Values.tokengen.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "enterprise-logs.serviceAccountName" . }}
      {{- if .Values.tokengen.priorityClassName }}
      priorityClassName: {{ .Values.tokengen.priorityClassName }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.tokengen.securityContext | nindent 8 }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ template "enterprise-logs.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=tokengen
            {{- if .Values.minio.enabled }}
            - -admin.client.backend-type=s3
            - -admin.client.s3.endpoint={{ .Release.Name }}-minio.{{ .Release.Namespace }}.svc:9000
            - -admin.client.s3.bucket-name=enterprise-logs-admin
            - -admin.client.s3.access-key-id=enterprise-logs
            - -admin.client.s3.secret-access-key=supersecret
            - -admin.client.s3.insecure=true
            {{- end }}
            {{- range $key, $value := .Values.tokengen.extraArgs }}
            - "-{{ $key }}={{ $value }}"
            {{- end }}
          volumeMounts:
            {{- if .Values.tokengen.extraVolumeMounts }}
              {{ toYaml .Values.tokengen.extraVolumeMounts | nindent 12 }}
            {{- end }}
            - name: config
              mountPath: /etc/loki/config
            - name: license
              mountPath: /etc/enterprise-logs/license
          env:
            {{- if .Values.tokengen.env }}
              {{ toYaml .Values.tokengen.env | nindent 12 }}
            {{- end }}
      restartPolicy: OnFailure
      volumes:
        - name: config
          secret:
          {{- if .Values.useExternalConfig }}
            secretName: {{ .Values.externalConfigName }}
          {{- else }}
            secretName: enterprise-logs-config
          {{- end }}
        - name: license
          secret:
          {{- if .Values.useExternalLicense }}
            secretName: {{ .Values.externalLicenseName }}
          {{- else }}
            secretName: enterprise-logs-license
          {{- end }}
        - name: storage
          emptyDir: {}
        {{- if .Values.tokengen.extraVolumes }}
        {{ toYaml .Values.tokengen.extraVolumes | nindent 8 }}
        {{- end }}
{{- end }}
